(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{418:function(t,s,a){"use strict";a.r(s);var n=a(55),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-什么是-typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是-typescript"}},[t._v("#")]),t._v(" 1 什么是 TypeScript")]),t._v(" "),a("p",[t._v("TypeScript 是微软开发的一个编程语言，它在 JavaScript 的基础上添加了静态类型系统")]),t._v(" "),a("h3",{attrs:{id:"_1-1-javascript-的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-javascript-的特点"}},[t._v("#")]),t._v(" 1.1 JavaScript 的特点")]),t._v(" "),a("p",[a("strong",[t._v("1. 没有类型约束")])]),t._v(" "),a("p",[t._v("和其他语言不同，JS 的变量没有类型约束，一个变量可以被赋值为各种类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"JavaScript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("2. 解释型语言")])]),t._v(" "),a("p",[t._v("JS 是一门解释型语言，没有编译阶段，它在运行时才会进行类型检查")]),t._v(" "),a("p",[t._v("基于以上两点，JS 代码的类型错误容易导致运行时错误，造成线上 bug")]),t._v(" "),a("p",[t._v("以下代码在运行时才会报错：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-2-typescript-的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-typescript-的特点"}},[t._v("#")]),t._v(" 1.2 TypeScript 的特点")]),t._v(" "),a("p",[a("strong",[t._v("1. 类型约束")])]),t._v(" "),a("p",[t._v("TypeScript 可以在声明变量时指定类型")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量 a 的类型为 number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),a("p",[a("strong",[t._v("2. 编译阶段")])]),t._v(" "),a("p",[t._v("TypeScript 拥有编译阶段，通过编译后代码会转换成 JS 代码")]),t._v(" "),a("p",[t._v("TypeScript 在编译阶段会进行类型检查，检查未通过会报错")]),t._v(" "),a("p",[t._v("以下代码无法通过编译，因为 number 类型没有"),a("code",[t._v("forEach")]),t._v("方法")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-3-类型系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-类型系统"}},[t._v("#")]),t._v(" 1.3 类型系统")]),t._v(" "),a("p",[t._v("类型系统按照“类型检查时机”分类动态类型和静态类型系统")]),t._v(" "),a("p",[t._v("动态类型：代码"),a("strong",[t._v("运行时")]),t._v("才会进行类型检查。比如 JS。类型错误可能导致发生运行时错误")]),t._v(" "),a("p",[t._v("静态类型：代码"),a("strong",[t._v("编译时")]),t._v("就会进行类型检查。比如 TS。类型错误在编译时就会被发现")]),t._v(" "),a("h2",{attrs:{id:"_2-安装-typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装-typescript"}},[t._v("#")]),t._v(" 2 安装 TypeScript")]),t._v(" "),a("p",[t._v("TypeScript 的命令行工具安装方法：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g typescript\n")])])]),a("p",[t._v("此命令会在全局安装"),a("code",[t._v("tsc")]),t._v("命令，安装成功后可以在任何地方执行"),a("code",[t._v("tsc")]),t._v("命令")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("tsc hello.ts\n")])])]),a("p",[t._v("以上命令可以将 hello.ts 编译成 hello.js")]),t._v(" "),a("h2",{attrs:{id:"_3-hello-typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-hello-typescript"}},[t._v("#")]),t._v(" 3 Hello TypeScript")]),t._v(" "),a("p",[t._v("复制以下代码到"),a("code",[t._v("hello.ts")]),t._v("中")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello TypeScript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("然后执行以下命令将 ts(Typescript) 编译成 js(JavaScript) 文件")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("tsc hello.ts\n")])])]),a("p",[t._v("成功后会生成"),a("code",[t._v("hello.js")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello TypeScript"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("对比两段代码可以发现，ts 代码中多了"),a("code",[t._v(": stirng")])]),t._v(" "),a("p",[a("strong",[t._v("ts 用"),a("code",[t._v(":")]),t._v("（前后有无空格均可）来指定类型")])]),t._v(" "),a("p",[a("code",[t._v("hello.ts")]),t._v("代码的意思是：hello 函数返回类型为字符串，变量 str 的类型也是字符串")]),t._v(" "),a("p",[a("strong",[t._v("指定类型后的变量必须接收同类型的值")])]),t._v(" "),a("p",[a("code",[t._v("hello.ts")]),t._v(" 中：字符串类型的 str 可以接受返回类型为字符串的 hello 函数的返回值")]),t._v(" "),a("h2",{attrs:{id:"_4-总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-总结"}},[t._v("#")]),t._v(" 4 总结")]),t._v(" "),a("ol",[a("li",[t._v("TypeScript 在 JS 的基础上增加了静态类型系统")]),t._v(" "),a("li",[t._v("TS 可以在编译时帮助开发人员发现类型错误，避免 JS 代码发生运行时错误")]),t._v(" "),a("li",[t._v("tsc + 文件名.ts 可以将 TS 代码编译成 JS 代码")])]),t._v(" "),a("h2",{attrs:{id:"_5-示例代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-示例代码"}},[t._v("#")]),t._v(" 5 示例代码")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/Melonvin/TypeScript-Demos",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码地址"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);